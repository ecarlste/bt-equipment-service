name: Publish Weapons API Client to npm

on:
  push:
    branches:
      - main
    paths:
      - "client-packages/weapons/client.ts"

  workflow_dispatch: # Allows manual trigger from GitHub Actions UI

env:
  MANUAL_BUMP: false

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          registry-url: "https://registry.npmjs.org/"

      - name: Fetch Latest Commit History
        run: git fetch --depth=2 # Get the last 2 commits for comparison

      - name: Detect Manual Version Bump
        id: check_manual_bump
        run: |
          set -e
          PREV_VERSION=$(git show HEAD~1:client-packages/weapons/package.json | jq -r .version)
          CURR_VERSION=$(jq -r .version client-packages/weapons/package.json)

          echo "Previous Version: $PREV_VERSION"
          echo "Current Version: $CURR_VERSION"

          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            echo "MANUAL_BUMP=true" >> $GITHUB_ENV
          fi

      - name: Bump Patch Version If No Manual Bump
        if: env.MANUAL_BUMP == 'false'
        run: |
          npm version patch --no-git-tag-version
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: bump weapons client patch version"
          git push origin main
        working-directory: client-packages/weapons

      - name: Get Version to Publish
        run: echo "UPDATED_VERSION=$(jq -r .version client-packages/weapons/package.json)" >> $GITHUB_ENV

      - name: Publish to npm
        run: npm publish --access public
        working-directory: client-packages/weapons
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify Published Version
        run: 'echo "Published Version: $UPDATED_VERSION"'
