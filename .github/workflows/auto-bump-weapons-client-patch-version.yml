name: Auto Bump Weapons API Client Patch Version

on:
  push:
    branches:
      - main
    paths:
      - "client-packages/weapons/client.ts"

  workflow_dispatch: # Allows manual trigger from GitHub Actions UI

env:
  MANUAL_BUMP: false
  UPDATED_VERSION: ""
  GH_APP_TOKEN: ""

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          registry-url: "https://registry.npmjs.org/"

      - name: Fetch Latest Commit History
        run: git fetch --depth=2 # Get the last 2 commits for comparison

      - name: Detect Manual Version Bump
        id: check_manual_bump
        run: |
          set -e
          PREV_VERSION=$(git show HEAD~1:client-packages/weapons/package.json | jq -r .version)
          CURR_VERSION=$(jq -r .version client-packages/weapons/package.json)

          echo "Previous Version: $PREV_VERSION"
          echo "Current Version: $CURR_VERSION"

          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            UPDATED_VERSION=$(jq -r .version client-packages/weapons/package.json)
            echo "UPDATED_VERSION=$UPDATED_VERSION" >> $GITHUB_ENV
            echo "MANUAL_BUMP=true" >> $GITHUB_ENV
          else
            echo "MANUAL_BUMP=false" >> $GITHUB_ENV
          fi

      - name: Bump Patch Version (auto bump only)
        if: env.MANUAL_BUMP == 'false'
        run: |
          npm version patch --no-git-tag-version

          UPDATED_VERSION=$(jq -r .version package.json)
          echo "UPDATED_VERSION=$UPDATED_VERSION" >> $GITHUB_ENV

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add package.json
          git commit -m "chore: bump weapons client to $UPDATED_VERSION"
          git push origin main:"github-actions-bot/bump-weapons-client-$UPDATED_VERSION"

          cat package.json
        working-directory: client-packages/weapons

      - name: Create PR for Bumped Version (auto bump only)
        id: cpr
        if: env.MANUAL_BUMP == 'false'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "chore: bump weapons client to ${{ env.UPDATED_VERSION }}"
          body: "Automated version bump for weapons client package to version ${{ env.UPDATED_VERSION }}"
          branch: "github-actions-bot/bump-weapons-client-${{ env.UPDATED_VERSION }}"
          base: "main"

      - name: Generate JWT for GitHub App (auto bump only)
        if: env.MANUAL_BUMP == 'false'
        run: |
          export GH_APP_JWT=$(bin/generate-jwt.bash ${{ secrets.GH_APP_CLIENT_ID }} "${{ secrets.GH_APP_PRIVATE_KEY }}")
          echo "::add-mask::$GH_APP_JWT"
          echo "GH_APP_JWT=$GH_APP_JWT" >> $GITHUB_ENV

      - name: Request GitHub App Installation Token (auto bump only)
        run: |
          RESPONSE=$(curl -s -X POST "https://api.github.com/app/installations/${{ vars.GH_APP_INSTALLATION_ID }}/access_tokens" \
            -H "Authorization: Bearer $GH_APP_JWT" \
            -H "Accept: application/vnd.github.v3+json")

          TOKEN=$(echo "$RESPONSE" | jq -r '.token')
          echo "::add-mask::$TOKEN"
          echo "GH_APP_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Set auto merge for PR (auto bump only)
        if: env.MANUAL_BUMP == 'false'
        run: gh pr merge --auto --squash ${{ steps.cpr.outputs.pull-request-number }}
        env:
          GH_TOKEN: ${{ env.GH_APP_TOKEN }}
